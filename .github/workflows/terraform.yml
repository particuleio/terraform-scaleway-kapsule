name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ secrets.TERRAFORM_VERSION }}

    - uses: actions/setup-python@v3

    - name: Install terraform tooling
      run: |
        curl -L "$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E "https://.+?-linux-amd64.tar.gz")" > terraform-docs.tgz && tar xzf terraform-docs.tgz terraform-docs && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/
        curl -L "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_linux_amd64.zip")" > tflint.zip && unzip tflint.zip tflint && rm tflint.zip && sudo mv tflint /usr/bin/

    - name: Check modules
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: --show-diff-on-failure --all-files

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      with:
        branches: |
          [
            'main'
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'

    - name: 'slack:success'
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v2
      with:
        channel: ${{ secrets.SLACK_CHANNEL }}
        status: SUCCESS
        color: good

    - name: 'slack:failure'
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v2
      with:
        channel: ${{ secrets.SLACK_CHANNEL }}
        status: failure
        color: danger
